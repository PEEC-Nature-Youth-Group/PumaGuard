name: Build package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

env:
  PYTHON_VERSION: '3.10'

jobs:

  lint-python:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: pip install --requirement requirements.txt --requirement test-requirements.txt
      - name: Lint source
        run: pynblint notebooks

  build-python:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run tests
        run: |
          poetry run pytest
      - name: Build package
        run: |
          poetry build
      - uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

  build-snap:

    runs-on: ubuntu-latest

    steps:
      - name: Check container free disk space
        run: df --human-readable /
      - name: Remove unecessary packages
        run: |
          sudo apt remove --auto-remove --purge \
            azure-cli \
            \*dotnet\* \
            google-chrome-stable \
            google-cloud-cli \
            \*jdk\* \
            microsoft-edge-stable \
            \*mono\* \
            \*mysql\* \
            powershell \
            r-base\*
      - name: Remove unecessary snaps
        run: |
          snap list \
            | awk '{print $1}' \
            | grep -E '(gnome|firefox|gtk)' \
            | xargs --verbose sudo snap remove --purge
      - name: Check container free disk space again
        run: df --human-readable /
      - name: Get largest installed packages
        run: |
          #!/bin/bash
          set -e -u -x
          apt list --installed \
            | grep -v Listing \
            | awk -F / '{print $1}' \
            | xargs apt-cache --no-all-versions show \
            | awk 'BEGIN{ size = 0; package = "" } /^Installed-Size:/{size = $2 } /^Package:/{package = $2} //{ if (size > 0 && package != "") { print size, package; size = 0; package = "" }}' \
            | sort --reverse --numeric-sort \
            | head --lines 30
      - name: Get installed snaps
        run: snap list
      - uses: actions/checkout@v4
      - uses: snapcore/action-build@v1
        id: snapcraft
      - uses: actions/upload-artifact@v4
        with:
          name: snapcraft
          path: ${{ steps.snapcraft.outputs.snap }}
